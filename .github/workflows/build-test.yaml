# copied from https://github.com/cloudevents/sdk-rust/blob/master/.github/workflows/rust_tests.yml

name: Rust Tests

on: push

jobs:
  build:
    name: ${{ matrix.toolchain }} / ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - stable
          - nightly
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - armv7-unknown-linux-gnueabihf
    steps:
      - uses: actions/checkout@v2

      # Setup musl if needed
      - run: sudo apt-get update
        if: matrix.target == 'x86_64-unknown-linux-musl'
      - run: sudo apt-get install -y musl musl-dev musl-tools cmake
        if: matrix.target == 'x86_64-unknown-linux-musl'

      # Caching stuff
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ matrix.toolchain }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          override: true

      # If glibc, compile and test all
      - uses: actions-rs/cargo@v1
        name: "Build"
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        with:
          command: build
          toolchain: ${{ matrix.toolchain }}
          args: --target ${{ matrix.target }}
      - uses: actions-rs/cargo@v1
        name: "Test"
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        with:
          command: test
          toolchain: ${{ matrix.toolchain }}
          args: --target ${{ matrix.target }}

      # If musl, compile and test all
      - uses: actions-rs/cargo@v1
        name: "Build"
        if: matrix.target == 'x86_64-unknown-linux-musl'
        with:
          command: build
          toolchain: ${{ matrix.toolchain }}
          args: --target ${{ matrix.target }}
        env:
          CC: musl-gcc
          CXX: g++
      - uses: actions-rs/cargo@v1
        name: "Test"
        if: matrix.target == 'x86_64-unknown-linux-musl'
        with:
          command: test
          toolchain: ${{ matrix.toolchain }}
          args: --target ${{ matrix.target }}
        env:
          CC: musl-gcc
          CXX: g++
      # If armv7, compile and test all
      - uses: actions-rs/cargo@v1
        name: "Build"
        if: matrix.target == 'armv7-unknown-linux-gnueabihf'
        with:
          command: build
          toolchain: ${{ matrix.toolchain }}
          args: --target ${{ matrix.target }}
        env:
          CC: arm-linux-gnueabihf-gcc
          CXX: g++
      - uses: actions-rs/cargo@v1
        name: "Test"
        if: matrix.target == 'armv7-unknown-linux-gnueabihf'
        with:
          command: test
          toolchain: ${{ matrix.toolchain }}
          args: --target ${{ matrix.target }}
        env:
          CC: arm-linux-gnueabihf-gcc
          CXX: g++
